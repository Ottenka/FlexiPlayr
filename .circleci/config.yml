version: 2.1 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/build-flexiplayr # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-browsers # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: flexiplayr-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: flexiplayr-{{ checksum "pom.xml" }}

      - run: mvn package # run the actual tests

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

      - run: ls -R # figure out where the file is lol

      - store_artifacts: # store the uberjar as an artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/FlexiPlayr-1.0.0-SNAPSHOT-jar-with-dependencies.jar
      - run: ssh-keyscan $DROPLET_IP >> ~/.ssh/known_hosts
      - deploy:
          name: Deploy to DigitalOcean
          command: |
            echo 'deploying master branch'
            ssh -v $DROPLET_USER@$DROPLET_IP "killall java && rm FlexiPlayr*.jar"
            scp target/FlexiPlayr-1.0.0-SNAPSHOT-jar-with-dependencies.jar $DROPLET_USER@$DROPLET_IP:/root/
            ssh -v $DROPLET_USER@$DROPLET_IP "./flexiplayr.sh" &
            disown
            sleep 10
            exit

workflows:
  version: 2
  workflow:
    jobs:
      - build:
        requires:
        branches:
          only: master
